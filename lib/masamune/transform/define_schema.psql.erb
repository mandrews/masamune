--  The MIT License (MIT)
--
--  Copyright (c) 2014-2015, VMware, Inc. All Rights Reserved.
--
--  Permission is hereby granted, free of charge, to any person obtaining a copy
--  of this software and associated documentation files (the "Software"), to deal
--  in the Software without restriction, including without limitation the rights
--  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
--  copies of the Software, and to permit persons to whom the Software is
--  furnished to do so, subject to the following conditions:
--
--  The above copyright notice and this permission notice shall be included in
--  all copies or substantial portions of the Software.
--
--  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
--  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
--  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
--  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
--  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
--  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
--  THE SOFTWARE.

CREATE EXTENSION IF NOT EXISTS "uuid-ossp";
CREATE EXTENSION IF NOT EXISTS hstore;

SET TIMEZONE TO 'UTC';

CREATE OR REPLACE FUNCTION json_to_hstore(JSON)
RETURNS HSTORE AS $$
  SELECT HSTORE(RTRIM(LTRIM(REPLACE($1::TEXT, ':', '=>'), '{'), '}'))
$$ LANGUAGE SQL RETURNS NULL ON NULL INPUT;

-- Adapted from https://gist.github.com/mfenniak/3008378
CREATE OR REPLACE FUNCTION hstore_merge(left HSTORE, right HSTORE) RETURNS HSTORE AS $$
  SELECT COALESCE($1, '') || COALESCE($2, '');
$$ LANGUAGE SQL;

DO $$ BEGIN
IF NOT EXISTS (SELECT * FROM pg_proc WHERE proname = 'hstore_merge' AND proisagg) THEN
CREATE AGGREGATE hstore_merge (HSTORE) (
  SFUNC = hstore_merge,
  STYPE = HSTORE,
  INITCOND = ''
);
END IF; END $$;

CREATE OR REPLACE FUNCTION coalesce_merge(left ANYELEMENT, right ANYELEMENT) RETURNS ANYELEMENT AS $$
  SELECT COALESCE($2, $1)
$$ LANGUAGE SQL;

DO $$ BEGIN
IF NOT EXISTS (SELECT * FROM pg_proc WHERE proname = 'coalesce_merge' AND proisagg) THEN
CREATE AGGREGATE coalesce_merge (ANYELEMENT) (
  SFUNC = coalesce_merge,
  STYPE = ANYELEMENT
);
END IF; END $$;
