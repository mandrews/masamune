CREATE TEMPORARY TABLE IF NOT EXISTS <%= target.stage_table.name %> (LIKE <%= target.name %> INCLUDING ALL);

<%#
Consolidate complete events from partial events
For discussion on range and group constructions, see:
http://www.postgresql.org/message-id/CAGnEbohhKmW55oB0FpQd3naXBkwi74E=8DRZBGFjS-MeGpXLaA@mail.gmail.com
-%>
WITH ranges AS (
  SELECT *,
  CASE WHEN delta = 0
  THEN 1 ELSE NULL END r
  FROM <%= target.ledger_table.name %>
), windows AS (
  SELECT *,
  SUM(r) OVER (ORDER BY <%= target.window('start_at').join(', ') %>) window_id
  FROM ranges
)
INSERT INTO
  <%= target.stage_table.name %> (<%= target.insert_columns.join(', ') %>, parent_uuid, record_uuid, start_at)
SELECT
  <%- target.insert_view_values.each do |value| -%>
  consolidated.<%= value %><%= ',' %>
  <%- end -%>
  consolidated.parent_uuid,
  consolidated.record_uuid,
  consolidated.start_at
FROM (
  SELECT
    FIRST_VALUE(uuid) OVER w AS parent_uuid,
    FIRST_VALUE(start_at) OVER w AS parent_start_at,
    uuid AS record_uuid,
    <%- target.insert_values(window: 'w').each do |value, last| -%>
    <%= value %><%= ',' %>
    <%- end -%>
    start_at AS start_at
  FROM
    windows
  WINDOW w AS (PARTITION BY <%= target.window('window_id').join(', ') %> ORDER BY start_at)
) consolidated
WHERE
  <%- target.insert_view_constraints.each do |constraint| -%>
  consolidated.<%= constraint %> AND
  <%- end -%>
  <%-# Do not consider partial events that occur simultaneously with complete parent event -%>
  (
    parent_uuid = record_uuid OR
    parent_start_at <> start_at
  )
;
